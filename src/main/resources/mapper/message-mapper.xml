<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlut.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="findConversations" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id
        in (
        select max(id)
        from message
        where status != 2
        and from_id != 1
        and (from_id = #{currentUserId} or to_id = #{currentUserId})
        group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}

    </select>

    <select id="findConversationsRows" resultType="int">
        select count(m.maxId)
        from
        (select max(id) as maxId
        from message
        where status != 2
        and from_id != 1
        and (from_id = #{currentUserId} or to_id = #{currentUserId})
        group by conversation_id
        ) as m
    </select>

    <select id="findMessages" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="findMessagesRows" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="findMessageUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
<!--        当前用户为接收方，所以为to_id-->
        and to_id = #{currentUserId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(
        <include refid="insertFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>